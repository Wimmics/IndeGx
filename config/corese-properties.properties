# Corese configuration 
# Property file interpreted by corese.core.util.Property
# java -jar corese-gui.jar    -init property.properties
# java -jar corese-server.jar -init property.properties
# Property.load("property.properties");
# Property.set(LOAD_IN_DEFAULT_GRAPH, true);
# Property.init(graph);
#


BLANK_NODE              = _:b

# display ex:test vs <http://example.org/test>
DISPLAY_URI_AS_PREFIX   = true

# Graph node is instance of IDatatype (one object) or Node(IDatatype) (two objects)
GRAPH_NODE_AS_DATATYPE  = true

# graph ?g { } iterate external named graph
EXTERNAL_NAMED_GRAPH    = true

# constraint rule entailment in kg:constraint named graph
CONSTRAINT_NAMED_GRAPH  = true

# constraint rule entailment in external kg:constraint named graph
CONSTRAINT_GRAPH        = true

# load in kg:default or in file path as named graph
LOAD_IN_DEFAULT_GRAPH   = true

# skolemize bnode as URI
SKOLEMIZE               = false

# run corese with rdf* prototype extension
RDF_STAR                = false

# clean OWL graph before OWL RL using update queries
OWL_CLEAN               = true

# additional queries for cleaning OWL
#OWL_CLEAN_QUERY         = /user/corby/home/AAData/query/clean/test.rq

# user defined OWL RL rule base
#OWL_RL                  = /user/corby/home/AAData/rule/owlrl.rul

# when true: distinct decimal and integer, distinct string and literal, ...
# used for w3c test case compliance
SPARQL_COMPLIANT        = false

# enable update during query for micro services 
REENTRANT_QUERY         = false

# rdf triples may be assigned access right
ACCESS_RIGHT            = false

# specify user access level
#ACCESS_LEVEL           = PUBLIC | RESTRICTED | PRIVATE

# corese trigger events that run ldscript functions
EVENT               = false

# Visitor for trace
RULE_VISITOR        = $vis.QuerySolverVisitorRuleUser
#SOLVER_VISITOR      = $vis.QuerySolverVisitorUser
#TRANSFORMER_VISITOR = $vis.QuerySolverVisitorTransformerUser
#SERVER_VISITOR      = fr.inria.corese.server.webservice.QuerySolverVisitorServerUser

#
# Test, debug
#
VERBOSE        = false
SOLVER_DEBUG   = false
TRANSFORMER_DEBUG   = false

# draft: trace var in owl rl checker: trace_sttl_undo=true
LDSCRIPT_VARIABLE        = mapsize=maplarge;mapzoom=6

INTERPRETER_TEST = false

# take property cardinality into account to sort query pattern
SOLVER_SORT_CARDINALITY   = false

# enable advanced prototype query planner (todo)
# std | advanced
SOLVER_QUERY_PLAN = std

LDSCRIPT_DEBUG           = false

# check xsd datatype of arguments at function call
LDSCRIPT_CHECK_DATATYPE  = false

# check rdf:type of arguments at function call
LDSCRIPT_CHECK_RDFTYPE   = false


# values filter
SERVICE_BINDING     = values 
SERVICE_SLICE       = 20
SERVICE_LIMIT       = 1000

DISABLE_OWL_AUTO_IMPORT = true