@prefix mf: <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix kgi: <http://ns.inria.fr/kg/index#> .
@prefix earl: <http://www.w3.org/ns/earl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .


<> a mf:Manifest ;
    kgi:requiredAssets (
        <../loadVocabularies.ttl>
    ) ;
    mf:entries (
        <classUsage.ttl>
    ) .

<classUsage.ttl> a mf:ManifestEntry ;
    kgi:onSuccess (
        [
            # Creating the basic description of each class
            mf:action """
            prefix voaf: <http://purl.org/vocommons/voaf#>
            prefix kgi: <http://ns.inria.fr/kg/index#>
            prefix xsd: <http://www.w3.org/2001/XMLSchema#>
            prefix prov: <http://www.w3.org/ns/prov#>
            prefix dcat: <http://www.w3.org/ns/dcat#>
            prefix void: <http://rdfs.org/ns/void#>
            prefix owl: <http://www.w3.org/2002/07/owl#>
            prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
            prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>

            INSERT {
                GRAPH ?vocabGraph {
                    ?elem voaf:reusedByDatasets ?nbUsedByDatasets .
                }
            }
            WHERE {
                GRAPH ?vocabGraph {
                    {
                        ?elem a ?type .
                        FILTER( ?type IN ( owl:Class, rdfs:Class ) )
                    } UNION {
                        ?elem ?prop ?type .
                        FILTER( ?prop IN ( rdfs:subClassOf, owl:equivalentClass, owl:complementOf ) )
                    } UNION {
                        ?type ?prop ?elem .
                        FILTER( ?prop IN ( rdfs:subClassOf, owl:equivalentClass, owl:complementOf ) )
                    } UNION {
                        ?thing ?prop ?elem .
                        FILTER( ?prop IN ( rdf:type, rdfs:range , rdfs:domain ) )
                    }
                }
                BIND( IF( EXISTS {
                    GRAPH ?vocabGraph {
                        ?elemDatasetOccurence voaf:reusedByDatasets ?occurences .
                    }
                }, ?occurences, 0) AS ?nbUsedByDatasets )
            }
            """
        ]
        [
            # Creating the occurences object of each property in each dataset
            mf:action """
            prefix voaf: <http://purl.org/vocommons/voaf#>
            prefix kgi: <http://ns.inria.fr/kg/index#>
            prefix xsd: <http://www.w3.org/2001/XMLSchema#>
            prefix prov: <http://www.w3.org/ns/prov#>
            prefix dcat: <http://www.w3.org/ns/dcat#>
            prefix void: <http://rdfs.org/ns/void#>
            prefix owl: <http://www.w3.org/2002/07/owl#>
            prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
            prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>

            INSERT {
                GRAPH ?vocabGraph {
                    ?elem voaf:usageInDataset ?elemDatasetOccurence ;
                        voaf:reusedByDatasets ?nbUsedByDatasets .
                    ?elemDatasetOccurence a voaf:DatasetOccurences ;
                        voaf:inDataset ?kg .
                }
            }
            WHERE {
                GRAPH ?vocabGraph {
                    {
                        ?elem a ?type .
                        FILTER( ?type IN ( owl:Class, rdfs:Class ) )
                    } UNION {
                        ?elem ?prop ?type .
                        FILTER( ?prop IN ( rdfs:subClassOf, owl:equivalentClass, owl:complementOf ) )
                    } UNION {
                        ?type ?prop ?elem .
                        FILTER( ?prop IN ( rdfs:subClassOf, owl:equivalentClass, owl:complementOf ) )
                    } UNION {
                        ?thing ?prop ?elem .
                        FILTER( ?prop IN ( rdf:type, rdfs:range , rdfs:domain ) )
                    }
                }
                GRAPH ?kgGraph {
                    ?kg void:classPartition ?pp .
                    ?pp void:class ?elem .
                }
                BIND( Iri( CONCAT( str(kgi:), MD5( CONCAT(STR(?elem) , STR(?kg) ) ) ) ) AS ?elemDatasetOccurence )
                BIND( IF( EXISTS {
                    GRAPH ?vocabGraph {
                        ?elemDatasetOccurence voaf:reusedByDatasets ?occurences .
                    }
                }, ?occurences + 1, 1) AS ?nbUsedByDatasets )
            }
            """
        ]
        [
            # Counting the number of appearances of each class in each dataset
            mf:action """
            prefix voaf: <http://purl.org/vocommons/voaf#>
            prefix kgi: <http://ns.inria.fr/kg/index#>
            prefix xsd: <http://www.w3.org/2001/XMLSchema#>
            prefix prov: <http://www.w3.org/ns/prov#>
            prefix dcat: <http://www.w3.org/ns/dcat#>
            prefix void: <http://rdfs.org/ns/void#>
            prefix owl: <http://www.w3.org/2002/07/owl#>
            prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
            prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>

            INSERT {
                GRAPH ?vocabGraph {
                    ?elem voaf:usageInDataset ?elemDatasetOccurence ;
                        voaf:occurrencesInDatasets ?nbDatasetOccurences .
                    ?elemDatasetOccurence a voaf:DatasetOccurences ;
                        voaf:occurrences ?nbEntities .
                }
            }
            WHERE {
                GRAPH ?vocabGraph {
                    {
                        ?elem a ?type .
                        FILTER( ?type IN ( owl:Class, rdfs:Class ) )
                    } UNION {
                        ?elem ?prop ?type .
                        FILTER( ?prop IN ( rdfs:subClassOf, owl:equivalentClass, owl:complementOf ) )
                    } UNION {
                        ?type ?prop ?elem .
                        FILTER( ?prop IN ( rdfs:subClassOf, owl:equivalentClass, owl:complementOf ) )
                    } UNION {
                        ?thing ?prop ?elem .
                        FILTER( ?prop IN ( rdf:type, rdfs:range , rdfs:domain ) )
                    }
                }
                GRAPH ?kgGraph {
                    ?kg void:classPartition ?pp .
                    ?pp void:class ?elem ;
                        void:entities ?nbEntities .
                }
                BIND( Iri( CONCAT( str(kgi:), MD5( CONCAT(STR(?elem) , STR(?kg) ) ) ) ) AS ?elemDatasetOccurence )
                BIND( IF( EXISTS {
                    GRAPH ?vocabGraph {
                        ?elemDatasetOccurence voaf:occurrencesInDatasets ?datasetOccurences .
                    }
                }, ?datasetOccurences + ?nbEntities, ?nbEntities) AS ?nbDatasetOccurences )
            }
            """
        ]
    ) .